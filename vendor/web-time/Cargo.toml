# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.60"
name = "web-time"
version = "0.2.3"
include = [
    "CHANGELOG.md",
    "LICENSE-*",
    "src/**/*",
]
autobenches = false
description = "Drop-in replacement for std::time for Wasm in browsers"
readme = "README.md"
keywords = [
    "instant",
    "wasm",
    "web",
    "systemtime",
    "time",
]
categories = [
    "api-bindings",
    "date-and-time",
    "wasm",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/daxpedda/web-time"

[package.metadata.docs.rs]
targets = ["wasm32-unknown-unknown"]

[profile.bench]
lto = true
codegen-units = 1

[[example]]
name = "benchmark"
path = "benches/benchmark.rs"

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dependencies.js-sys]
version = "0.3.20"

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dependencies.wasm-bindgen]
version = "0.2.70"
default-features = false

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dev-dependencies.getrandom]
version = "0.2"
features = ["js"]

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dev-dependencies.rand]
version = "0.8"

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dev-dependencies.wasm-bindgen-futures]
version = "0.4"

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dev-dependencies.wasm-bindgen-test]
version = "0.3"

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dev-dependencies.web-sys]
version = "0.3"
features = [
    "CssStyleDeclaration",
    "Document",
    "Element",
    "HtmlTableElement",
    "HtmlTableRowElement",
    "Performance",
    "Window",
]

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\")), target_feature = \"atomics\"))".dev-dependencies.futures-channel]
version = "0.3"
features = ["alloc"]
default-features = false

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\")), target_feature = \"atomics\"))".dev-dependencies.futures-util]
version = "0.3"
default-features = false

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\")), target_feature = \"atomics\"))".dev-dependencies.web-sys]
version = "0.3"
features = ["WorkerGlobalScope"]

[target."cfg(not(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\")))))".dev-dependencies.pollster]
version = "0.3"
features = ["macro"]
