# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "combine"
version = "4.6.6"
authors = ["Markus Westerlind <marwes91@gmail.com>"]
description = "Fast parser combinators on arbitrary streams with zero-copy support."
documentation = "https://docs.rs/combine"
readme = "README.md"
keywords = [
    "parser",
    "parsing",
    "combinators",
    "ll",
]
categories = [
    "parsing",
    "no-std",
]
license = "MIT"
repository = "https://github.com/Marwes/combine"
resolver = "1"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[profile.bench]
lto = true
codegen-units = 1

[lib]
name = "combine"
path = "src/lib.rs"

[[example]]
name = "async"
required-features = [
    "std",
    "tokio",
]

[[example]]
name = "date"

[[example]]
name = "number"

[[example]]
name = "readme"

[[example]]
name = "ini"

[[test]]
name = "async"
required-features = [
    "tokio-02",
    "futures-io-03",
]

[[bench]]
name = "json"
harness = false
required-features = ["std"]

[[bench]]
name = "http"
harness = false
required-features = ["std"]

[[bench]]
name = "mp4"
harness = false
required-features = ["mp4"]

[dependencies.bytes]
version = "1"
optional = true

[dependencies.bytes_05]
version = "0.5"
optional = true
package = "bytes"

[dependencies.futures-core-03]
version = "0.3.1"
optional = true
default-features = false
package = "futures-core"

[dependencies.futures-io-03]
version = "0.3.1"
optional = true
default-features = false
package = "futures-io"

[dependencies.memchr]
version = "2.3"
default-features = false

[dependencies.pin-project-lite]
version = "0.2"
optional = true

[dependencies.regex]
version = "1"
optional = true

[dependencies.tokio-02-dep]
version = "0.2.3"
features = ["io-util"]
optional = true
default-features = false
package = "tokio"

[dependencies.tokio-03-dep]
version = "0.3"
optional = true
default-features = false
package = "tokio"

[dependencies.tokio-dep]
version = "1"
optional = true
default-features = false
package = "tokio"

[dependencies.tokio-util]
version = "0.7"
features = ["codec"]
optional = true
default-features = false

[dev-dependencies.async-std]
version = "1"

[dev-dependencies.bytes]
version = "1"

[dev-dependencies.bytes_05]
version = "0.5"
package = "bytes"

[dev-dependencies.criterion]
version = "0.3"
default-features = false

[dev-dependencies.futures-03-dep]
version = "0.3.1"
package = "futures"

[dev-dependencies.once_cell]
version = "1.0"

[dev-dependencies.partial-io]
version = "0.3"
features = [
    "tokio",
    "quickcheck",
]

[dev-dependencies.quick-error]
version = "1.0"

[dev-dependencies.quickcheck]
version = "0.6"

[dev-dependencies.tokio-02-dep]
version = "0.2"
features = [
    "fs",
    "io-driver",
    "io-util",
    "macros",
]
package = "tokio"

[dev-dependencies.tokio-03-dep]
version = "0.3"
features = [
    "fs",
    "macros",
    "rt-multi-thread",
]
package = "tokio"

[dev-dependencies.tokio-dep]
version = "1"
features = [
    "fs",
    "macros",
    "rt",
    "rt-multi-thread",
    "io-util",
]
package = "tokio"

[features]
alloc = []
default = ["std"]
futures-03 = [
    "pin-project",
    "std",
    "futures-core-03",
    "futures-io-03",
    "pin-project-lite",
]
mp4 = []
pin-project = ["pin-project-lite"]
std = [
    "memchr/std",
    "bytes",
    "alloc",
]
tokio = [
    "tokio-dep",
    "tokio-util/io",
    "futures-core-03",
    "pin-project-lite",
]
tokio-02 = [
    "pin-project",
    "std",
    "tokio-02-dep",
    "futures-core-03",
    "pin-project-lite",
    "bytes_05",
]
tokio-03 = [
    "pin-project",
    "std",
    "tokio-03-dep",
    "futures-core-03",
    "pin-project-lite",
]
