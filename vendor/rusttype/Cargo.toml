# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "rusttype"
version = "0.9.3"
authors = [
    "Dylan Ede <dylanede@googlemail.com>",
    "Jeremy Soller <jackpot51@gmail.com>",
    "Alex Butler <alexheretic@gmail.com>",
]
exclude = ["/dev/**"]
description = """
A pure Rust alternative to libraries like FreeType.

RustType provides an API for loading, querying and rasterising TrueType fonts.

It also provides an implementation of a dynamic GPU glyph cache for hardware font rendering.
"""
homepage = "https://gitlab.redox-os.org/redox-os/rusttype"
documentation = "https://docs.rs/rusttype"
readme = "README.md"
keywords = [
    "font",
    "truetype",
    "opentype",
    "ttf",
    "otf",
]
license = "MIT / Apache-2.0"
repository = "https://gitlab.redox-os.org/redox-os/rusttype"

[package.metadata.docs.rs]
features = ["gpu_cache"]

[dependencies.ab_glyph_rasterizer]
version = "0.1.5"
default-features = false

[dependencies.libm]
version = "0.2.1"
optional = true
default-features = false

[dependencies.linked-hash-map]
version = "0.5"
optional = true

[dependencies.owned_ttf_parser]
version = "0.15"
default-features = false

[dependencies.rustc-hash]
version = "1"
optional = true

[dev-dependencies.approx]
version = "0.5"
default-features = false

[features]
default = ["std"]
gpu_cache = [
    "std",
    "linked-hash-map",
    "rustc-hash",
    "crossbeam-deque",
    "crossbeam-utils",
    "num_cpus",
]
has-atomics = []
libm-math = [
    "libm",
    "ab_glyph_rasterizer/libm",
]
std = [
    "has-atomics",
    "owned_ttf_parser/default",
    "ab_glyph_rasterizer/default",
]

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.crossbeam-deque]
version = "0.8"
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.crossbeam-utils]
version = "0.8"
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.num_cpus]
version = "1.13"
optional = true
