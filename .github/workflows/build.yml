name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: aarch64
        uses: uraimo/run-on-arch-action@v2
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        with:
          arch: aarch64
          distro: ubuntu_latest
          githubToken: ${{ github.token }}
          run: |
            apt update
            apt -y install libsdl2-dev
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
            cargo build --release -v --target=${{ matrix.target }}
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        with:
          target: ${{ matrix.target }}
          rustflags: ""
      - name: Build
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt -y install libsdl2-dev
          cargo build --release -v --target=${{ matrix.target }}
      - name: Upload file
        uses: actions/upload-artifact@v4
        with:
          name: gopher64-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/gopher64

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          rustflags: ""
      - name: Build
        run: |
          cargo build --release -v --target=${{ matrix.target }}
      - name: Upload file
        uses: actions/upload-artifact@v4
        with:
          name: gopher64-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/gopher64.exe

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          rustflags: ""
      - name: Build
        run: |
          cargo build --release -v --target=${{ matrix.target }}
      - name: Upload file
        uses: actions/upload-artifact@v4
        with:
          name: gopher64-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/gopher64
