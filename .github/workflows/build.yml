name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: setup deb822 repos
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          cat <<EOF > deb822sources
          Types: deb
          URIs: http://archive.ubuntu.com/ubuntu/
          Suites: noble
          Components: main restricted universe
          Architectures: amd64

          Types: deb
          URIs: http://security.ubuntu.com/ubuntu/
          Suites: noble-security
          Components: main restricted universe
          Architectures: amd64

          Types: deb
          URIs: http://archive.ubuntu.com/ubuntu/
          Suites: noble-updates
          Components: main restricted universe
          Architectures: amd64

          Types: deb
          URIs: http://azure.ports.ubuntu.com/ubuntu-ports/
          Suites: noble
          Components: main restricted multiverse universe
          Architectures: arm64

          Types: deb
          URIs: http://azure.ports.ubuntu.com/ubuntu-ports/
          Suites: noble-updates
          Components: main restricted multiverse universe
          Architectures: arm64
          EOF

          sudo mv deb822sources /etc/apt/sources.list.d/ubuntu.sources
      - name: Install aarch64 compiler
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt update
          sudo apt -y install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          sudo apt -y install libsdl2-dev:arm64
      - name: Install sdl2 headers
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt -y install libsdl2-dev
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          rustflags: ""
      - name: Build
        run: |
          cargo build --release -v --target=${{ matrix.target }}
      - name: Upload file
        uses: actions/upload-artifact@v4
        with:
          name: gopher64-linux-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/gopher64

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc, aarch64-pc-windows-msvc]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          rustflags: ""
      - name: Build
        run: |
          cargo build --release -v --target=${{ matrix.target }}
      - name: Upload file
        uses: actions/upload-artifact@v4
        with:
          name: gopher64-windows-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/gopher64.exe

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          rustflags: ""
      - name: Build
        run: |
          cargo build --release -v --target=${{ matrix.target }}
      - name: Upload file
        uses: actions/upload-artifact@v4
        with:
          name: gopher64-mac-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/gopher64
